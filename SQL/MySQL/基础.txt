-- 1、创建数据库
CREATE DATABASE student;

-- 2、指定要操作的数据库
use student;

-- 3、创建数据表
create table grade 
(
	id INT(11),
	name VARCHAR(20),
	grade FLOAT
)
-- 验证数据表是否创建成功
show tables

-- 4、查看数据表
show create table grade;

-- 5、使用describe语句查看数据表
DESC grade

-- 6、为数据表重命名
ALTER TABLE grade rename newgrade;

-- 7、修改字段名
alter table grade CHANGE name newname VARCHAR(20)

-- 8、修改字段数据类型
ALTER TABLE grade MODIFY id INT(20);

-- 9、添加字段
ALTER TABLE grade ADD age INT(10)

-- 10、删除字段
ALTER TABLE grade DROP grade;

-- 11、修改字段排列位置
ALTER TABLE grade MODIFY newname VARCHAR(20) FIRST;  -- (将字段newname插入到表的第一个位置)
ALTER TABLE grade MODIFY id INT(11) AFTER grade;     -- 将字段id插入到字段grade的后面

-- 12、删除数据库
DROP TABLE grade;

------- 1、“增”--添加数据 ------- 
-- 1.1 INSERT语句中指定所有字段名
create table student(
	id INT(10), 
	name VARCHAR(20),
	grade int
) 
INSERT INTO student(id,name,grade) VALUES(1,'zhangshan',98);
SELECT * from student

-- 1.2 insert语句中不指定字段名
insert into student values(2,'lisi',64);

-- 1.3 为表的指定字段添加数据
insert into student(id,name) values(3,'wangwu')

-- 1.4 insert语句的其他用法 
insert into student set id=4,name='lisi',grade =74

-- 1.5 同时添加多条数据
insert into student values
(5,'lilei',99),
(6,'hanmeimei',87),
(8,'poly',76);


------- 2、“删”--删除数据 ------- 
-- 2.1 删除部分数据
delete from student where id=7;

-- 2.2 删除全部数据
delete from student;

-- 2.3 删除全部数据的另一种方法——TRUNCATE
truncate table student;
--注意：
--（1）DELETE 后面可以跟WHERE子句指定删除部分记录，TRUNCATE只能删除整个表的所有记录
--（2）使用TRUNCATE语句删除记录后，新添加的记录时，自动增长字段（如本文中student表中的 id 字段）会默认从1开始，而使用DELETE删除记录后，新添加记录时，自动增长字段会从删除时该字段的的最大值加1开始计算（即原来的id最大为5，则会从6开始计算）。所以如果是想彻底删除一个表的记录而且不会影响到重新添加记录，最好使用TRUNCATE来删除整个表的记录。

------- 3、“改”--更新数据 ------- 
update student set name='zhaoding' where id=6

-- 3.1 update更新部分数据
update student set name='caocao',grade=50
where id=1

-- 3.2 update更新全部数据
update student set grade=80

------- 4、“查”--单表查询 ------- 
create table student2(
	id int(3) primary key auto_increment,
	name varchar(20) not null,
	grade float,
	gender CHAR(2) 
)DEFAULT CHARSET=utf8mb4;

insert into student2(name,grade,gender) 
VALUES ('songjiang',40,'男'),('wuyong',100,'男'),('qinming',90,'男'),('husanniang',88,'女'),('sunerniang',66,'女'),('wusong',86,'男'),('linchong',92,'男'),('yanqing',90,NULL);

-- 4.1 简单查询：查询所有字段
select id,name,grade,gender from student2;

-- 4.2 在select语句中使用（‘*’）通配符代替所有字段
select * from student2;

-- 4.3 查询指定的部分字段
select name,gender from student2;

-- 4.4 按条件查询  带关系运算符的查询
select id,name from student2 where id=4;
select id,name,grade from student2 where grade>80;

-- 4.5 带in关键字的查询
select * from student2 where id in (1,2,3);

-- 4.6 带between and 关键字的查询
select id,name from student2 where id between 2 and 5;

-- 4.7 空值查询
select * from student2 where gender is null;

-- 4.8 带distinct关键字的查询
select distinct gender from student2;

-- 4.9 带like关键字的查询
-- 语法：SELECT * | 字段名1，字段名2，… FROM 表名 WHERE 字段名 [ NOT ] LIKE ‘匹配字符串’;
-- 百分号（%）通配符
select id,name from student2 where name like "S%"
SELECT id,name FROM student2 WHERE name LIKE 'w%g';
SELECT id,name FROM student2 WHERE name NOT LIKE '%y%';

-- 下划线（_）通配符
SELECT * FROM student2 WHERE name LIKE 'wu_ong';

-- 带and关键字的多条件查询
SELECT id,name FROM student2 WHERE id<5 AND gender='女';

-- 带or关键字的多条件查询
SELECT id,name ,gender FROM student2 WHERE id<3 OR gender='女';

-- or和and一起使用的情况    AND 的优先级高于 OR，因此二者一起使用时，会先运算 AND 两边的表达式，再运算 OR 两边的表达式
SELECT * FROM student2 WHERE gender='女' OR gender='男' AND grade=100;

------- 5、高级查询 ------- 
-- 5.1 聚合函数
-- count()函数：统计记录数
select count(*) from student2;

-- sum()函数：求出表中某个字段所有值的总和
select SUM(grade) from student2;

-- avg()函数：求出表中某个字段所有值的平均数
select avg(grade) from student2;

-- max()函数：求出表中某个字段所有值的最大值
select MAX(grade) from student2;

-- min()函数：求出表中某个字段所有值的最小值
select min(grade) from student2;

-- 对查询结果进行排序    ASC表示升序排列，DESC 表示降序排列，默认情况是升序排列
select * from student2
ORDER BY grade;

select * from student2 
ORDER BY grade desc;

-- 5.2 分组查询
-- 单独使用group by进行分组
select * from student2 GROUP BY gender;

-- group by 和聚合函数一起使用
select count(*),gender from student2 group by gender;

-- GROUP BY 和 HAVING关键字一起使用
--  HAVING关键字和WHERE关键字的作用相同，区别在于HAVING 关键字可以跟聚合函数，而WHERE 关键字不能。通常HAVING 关键字都和GROUP BY一起使用，用于对分组后的结果进行过滤。
select SUM(grade),gender from student2 GROUP BY gender HAVING sum(grade) < 300;

-- 使用 LIMIT 限制查询结果的数量
-- 在此语法中，LIMIT 后面可以跟两个参数，第一个参数“ OFFSET ”表示偏移量，如果偏移量为0，则从查询结果的第一条记录开始，偏移量为1则从查询结果中的第二条记录开始，以此类推。OFFSET为可选值，默认值为0，第二个参数“记录数”表示指定返回查询记录的条数。
select * from student2 LIMIT 4;
select * from student2 ORDER BY grade desc LIMIT 4,4;

------- 6、函数 -------
1、数学类函数
abs(x)     返回x的绝对值
sqrt(x)    返回x的非负二次方根
mod(x,y)   返回x被y除后的余数
ceiling(x) 返回不小于x的最小整数
floor(x)   返回不大于x的最大整数
round(x,y) 将x进行四舍五入操作，小数点后保留y位
truncate(x,y) 舍去x中小数点后y位的数
sign(x)    返回x的符号，-1,0或1

2.字符串类函数
length(x)  返回字符串str的长度
concat(s1,s2,...)  返回一个或多个字符串连接产生的新的字符串
trim(str)  删除字符串两侧的空格
replace(str,s1,s2)  使用字符串s2代替字符串str中所有的字符串s1
substring(str,n,len) 返回字符串str的子串，起始位置为n，长度为len
reverse(str)  返回字符串str反转后的结果
locate(s1,str)  返回子串s1在字符串str中的位置

3.日起和时间函数
curdate()   获取系统当前时间
curtime()   获取系统当前时间
sysdate()   获取当前系统的日期和时间
time_to_sec()  返回将日期转换成秒的结果
adddate()   执行日期的加运算
sbudate()   执行日期的减运算
date_format()  格式化输出日期和时间值

4.条件判断函数
if(expr,v1,v2)   如果expr表达式为true返回v1，否则返回v2
ifnull(v1,v2)    如果v1不为null返回v1，否则返回v2
case expr when v1 then r1[when v2 then r1 ...][else m] end    如果expr的值等于v1,v2等，则返回对应位置then后面的结果，否则返回else后面的结果m

执行顺序：
select xxx
from xxx
where xxx
group by xxx
having xxx
order by xxx
limit xxx















